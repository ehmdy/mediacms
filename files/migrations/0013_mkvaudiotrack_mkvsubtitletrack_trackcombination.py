# Generated by Django 5.1.6 on 2025-09-24 00:40

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('files', '0012_media_allow_whisper_transcribe_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='MKVAudioTrack',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('track_index', models.PositiveIntegerField(help_text='Track index in the MKV file', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(99)])),
                ('codec', models.CharField(help_text='Audio codec (aac, ac3, dts, etc.)', max_length=20)),
                ('language', models.CharField(blank=True, help_text='Language code', max_length=10)),
                ('title', models.CharField(blank=True, help_text='Track title', max_length=200)),
                ('channels', models.PositiveIntegerField(help_text='Number of audio channels')),
                ('sample_rate', models.PositiveIntegerField(help_text='Sample rate in Hz')),
                ('bitrate', models.PositiveIntegerField(help_text='Bitrate in bps')),
                ('is_default', models.BooleanField(default=False, help_text='Whether this is the default audio track')),
                ('media', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mkv_audio_tracks', to='files.media')),
            ],
            options={
                'ordering': ['track_index'],
                'unique_together': {('media', 'track_index')},
            },
        ),
        migrations.CreateModel(
            name='MKVSubtitleTrack',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('track_index', models.PositiveIntegerField(help_text='Track index in the MKV file', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(99)])),
                ('codec', models.CharField(help_text='Subtitle codec (srt, ass, vobsub, etc.)', max_length=20)),
                ('language', models.CharField(blank=True, help_text='Language code', max_length=10)),
                ('title', models.CharField(blank=True, help_text='Track title', max_length=200)),
                ('is_forced', models.BooleanField(default=False, help_text='Whether this is a forced subtitle track')),
                ('is_default', models.BooleanField(default=False, help_text='Whether this is the default subtitle track')),
                ('media', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mkv_subtitle_tracks', to='files.media')),
            ],
            options={
                'ordering': ['track_index'],
                'unique_together': {('media', 'track_index')},
            },
        ),
        migrations.CreateModel(
            name='TrackCombination',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('audio_track_index', models.PositiveIntegerField(help_text='Selected audio track index')),
                ('subtitle_track_index', models.PositiveIntegerField(blank=True, help_text='Selected subtitle track index', null=True)),
                ('cache_key', models.CharField(help_text='Unique cache key for this combination', max_length=100, unique=True)),
                ('video_file_path', models.CharField(help_text='Path to the pre-processed video file', max_length=500)),
                ('file_size', models.BigIntegerField(help_text='File size in bytes')),
                ('duration', models.FloatField(help_text='Video duration in seconds')),
                ('is_processed', models.BooleanField(default=False, help_text='Whether this combination has been processed')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('media', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='track_combinations', to='files.media')),
            ],
            options={
                'ordering': ['audio_track_index', 'subtitle_track_index'],
                'unique_together': {('media', 'audio_track_index', 'subtitle_track_index')},
            },
        ),
    ]
